services:
  postgrechalangesrv:
    image: 'postgres:17-alpine'
    container_name: postgreschalange
    restart: always
    ports:
      - '5433:5432'
    environment:
      - 'POSTGRES_USER=challenge'
      - 'POSTGRES_PASSWORD=Senh@123'
      - 'POSTGRES_DB=challenge'
      - 'PGDATA=/var/lib/postgresql/data/pgdata'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 15
    volumes:
      - './chalange-database/data:/var/lib/postgresql/data'
      - './chalange-database/init-script:/docker-entrypoint-initdb.d/'
  bff:
    image: ${DOCKER_REGISTRY-}bff
    build:
      context: ./src/Backend
      dockerfile: Bff/Dockerfile
    depends_on:
      postgrechalangesrv:
        condition: service_healthy
    ports:  
      - '8080:8080'
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'ConnectionStrings__PostgresSqlConnectionString=Host=postgrechalangesrv;Port=5432;Username=challenge;Password=Senh@123;Database=challenge;Pooling=true;'
    volumes:
      - './nuget_offline_packages/packages:/root/.nuget/packages:rw'
  frontend:
    build:
      context: ./src/Frontend/chalange-front
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NEXTAUTH_URL=http://192.168.68.54:3000
      - NEXTAUTH_SECRET=4b8e2f9c3d7a6e1f0a9b4c2d8e7f1a3c6d9e0b5f2a8c4d7e1f3a6b9c2d8e0f1
      - NEXT_PUBLIC_API_URL=http://192.168.68.54:8080
    depends_on:
      - bff
  productcounter:
    image: ${DOCKER_REGISTRY-}productcounter
    build:
      context: ./src/Backend
      dockerfile: Functions/ProductCounterAzFunction/Dockerfile
    depends_on:
      bff:
        condition: service_started
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'ConnectionStrings__RabbitMq=amqp://guest:guest@localhost:5672'
      - 'ConnectionStrings__RedisServer=localhost:6379'
      - 'ConnectionStrings__PostgresSqlConnectionString=Host=postgrechalangesrv;Port=5432;Username=challenge;Password=Senh@123;Database=challenge;Pooling=true;'
      - 'AzureWebJobsStorage='
      - 'FUNCTIONS_WORKER_RUNTIME=dotnet-isolated'
    ports:
      - '7071:80'
  sendtofabric:
    image: ${DOCKER_REGISTRY-}sendtofabric
    build:
      context: ./src/Backend
      dockerfile: Functions/SendToFabric/Dockerfile
    depends_on:
      bff:
        condition: service_started
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'ConnectionStrings__RabbitMq=amqp://guest:guest@localhost:5672'
      - 'ConnectionStrings__RedisServer=localhost:6379'
      - 'ConnectionStrings__PostgresSqlConnectionString=Host=postgrechalangesrv;Port=5432;Username=challenge;Password=Senh@123;Database=challenge;Pooling=true;'
      - 'AzureWebJobsStorage='
      - 'FUNCTIONS_WORKER_RUNTIME=dotnet-isolated'
      - 'ServiceUrl=https://example.com/api'
      - 'ServiceUser=admin'
      - 'ServicePassword=password123'
    ports:
      - '7072:80'
